name: Deploy Prod Diary Muslim
on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Deploying to Server Prod
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node js
        uses: actions/setup-node@v1
        with:
          node-version: "18.x"

      - name: Install packages
        run: npm i

      - name: Build web
        run: |
          npm run build --if-present
          npm run build
        env:
          CI: false

      ######################## Comment if uses docker / container #####################
      - name: Deploy to server
        uses: garygrossgarten/github-action-scp@release
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ${{ secrets.SERVER_USERNAME_PROD }}
          password: ${{ secrets.SERVER_PASSWORD_PROD }}
          port: ${{ secrets.PORT_PROD }}
          local: build
          remote: /var/www/web.diarymuslim.com
      ######################## Comment if uses docker / container #####################

      ######################## Uncomment if uses docker / container #####################
      # - name: Publish to Github Packages Registry
      #   uses: elgohr/Publish-Docker-Github-Action@v5
      #   with:
      #     name: agoerie/diary-muslim-web/prod
      #     registry: ghcr.io
      #     username: ${{ secrets.G_USERNAME }}
      #     password: ${{ secrets.G_TOKEN }}
      #     dockerfile: Dockerfile
      #     tags: latest

      # - name: Deploy to server
      #   uses: appleboy/ssh-action@master
      #   env:
      #     GITHUB_USERNAME: ${{ secrets.G_USERNAME }}
      #     GITHUB_TOKEN: ${{ secrets.G_TOKEN }}
      #   with:
      #     host: ${{ secrets.HOST_PROD }}
      #     username: ${{ secrets.SERVER_USERNAME_PROD }}
      #     password: ${{ secrets.SERVER_PASSWORD_PROD }}
      #     port: ${{ secrets.PORT_PROD }}
      #     envs: GITHUB_USERNAME, GITHUB_TOKEN
      #     script: |
      #       cd web
      #       docker login ghcr.io -u $GITHUB_USERNAME -p $GITHUB_TOKEN
      #       docker compose pull
      #       docker compose up --force-recreate --build -d
      #       docker image prune -f
      ######################## Uncomment if uses docker / container #####################
